apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "69"
  creationTimestamp: "2025-07-03T13:09:10Z"
  generation: 115
  labels:
    app: userservice
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"userservice"}:
                .: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: kubectl-create
    operation: Update
    time: "2025-07-03T13:09:10Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:volumes:
              k:{"name":"jwt-keys-vol"}:
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
    manager: kubectl-edit
    operation: Update
    time: "2025-07-03T17:37:52Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"userservice"}:
                f:image: {}
    manager: kubectl-set
    operation: Update
    time: "2025-07-11T23:22:48Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"userservice"}:
                f:env:
                  .: {}
                  k:{"name":"ACCOUNTS_DB_URI"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ENABLE_CLOUD_TRACE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"ENABLE_TRACING"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"JWT_SECRET"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PRIV_KEY_PATH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PUB_KEY_PATH"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"TOKEN_EXPIRY_SECONDS"}:
                    .: {}
                    f:name: {}
                    f:value: {}
    manager: oc.exe
    operation: Update
    time: "2025-07-15T14:40:25Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"userservice"}:
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/jwt-keys"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
                    f:readOnly: {}
                  k:{"mountPath":"/keys"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:volumes:
              .: {}
              k:{"name":"jwt-key-volume"}:
                .: {}
                f:name: {}
                f:secret:
                  .: {}
                  f:defaultMode: {}
                  f:secretName: {}
              k:{"name":"jwt-keys-vol"}:
                .: {}
                f:name: {}
    manager: kubectl-patch
    operation: Update
    time: "2025-07-15T15:20:50Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:kubectl.kubernetes.io/restartedAt: {}
    manager: kubectl-rollout
    operation: Update
    time: "2025-07-15T15:21:02Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2025-07-16T04:36:13Z"
  name: userservice
  namespace: redops
  resourceVersion: "75185179"
  uid: 972a3b30-ea82-4e56-bcff-f7a645f05b9f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: userservice
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-07-15T20:51:02+05:30"
      creationTimestamp: null
      labels:
        app: userservice
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: ENABLE_TRACING
          value: "true"
        - name: TOKEN_EXPIRY_SECONDS
          value: "3600"
        - name: PRIV_KEY_PATH
          value: /keys/private.pem
        - name: PUB_KEY_PATH
          value: /keys/public.pem
        - name: ACCOUNTS_DB_URI
          value: postgresql://accounts-admin:accounts-pwd@accounts-db.redops.svc.cluster.local:5432/accounts
        - name: JWT_SECRET
          value: your-secret-value
        - name: ENABLE_CLOUD_TRACE
          value: "false"
        image: image-registry.openshift-image-registry.svc:5000/redops/userservice@sha256:615c14013705d1f7fcb1709c26e57ac76e2a132ce0ec8892e105edd98a6bb968
        imagePullPolicy: Always
        name: userservice
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /keys
          name: jwt-keys-vol
        - mountPath: /jwt-keys
          name: jwt-key-volume
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: jwt-keys-vol
        secret:
          defaultMode: 420
          secretName: jwt-keys
      - name: jwt-key-volume
        secret:
          defaultMode: 420
          secretName: jwt-public-key
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-07-05T08:36:47Z"
    lastUpdateTime: "2025-07-15T15:21:13Z"
    message: ReplicaSet "userservice-6b6687c9dd" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2025-07-16T04:36:13Z"
    lastUpdateTime: "2025-07-16T04:36:13Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 115
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
