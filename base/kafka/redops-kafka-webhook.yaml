# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-webhook
  namespace: redops
  labels:
    app: kafka-webhook
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-webhook
  template:
    metadata:
      labels:
        app: kafka-webhook
    spec:
      containers:
        - name: kafka-webhook
          image: image-registry.openshift-image-registry.svc:5000/redops/kafka-webhook:latest
          ports:
            - containerPort: 5000
          env:
            - name: KAFKA_BROKER
              value: "redops-kafka-kafka-bootstrap:9092"
            - name: KAFKA_TOPIC
              value: "alerts-infra"

---

# Service
apiVersion: v1
kind: Service
metadata:
  name: kafka-webhook
  namespace: redops
spec:
  selector:
    app: kafka-webhook
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000

---

# ConfigMap containing Python source
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-webhook-code
  namespace: redops
data:
  kafka_webhook.py: |
    from flask import Flask, request
    from kafka import KafkaProducer
    import json, os

    app = Flask(__name__)
    broker = os.getenv("KAFKA_BROKER")
    topic = os.getenv("KAFKA_TOPIC")

    producer = KafkaProducer(
        bootstrap_servers=broker,
        value_serializer=lambda v: json.dumps(v).encode("utf-8")
    )

    @app.route("/alert", methods=["POST"])
    def alert():
        data = request.get_json()
        producer.send(topic, data)
        return "ok", 200

    if __name__ == "__main__":
        app.run(host="0.0.0.0", port=5000)

  Dockerfile: |
    FROM python:3.9
    WORKDIR /app
    COPY kafka_webhook.py .
    RUN pip install flask kafka-python
    CMD ["python", "kafka_webhook.py"]

---
#Buildconfig
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: kafka-webhook
  namespace: redops
spec:
  source:
    type: Binary
  strategy:
    type: Docker
    dockerStrategy: {}
  output:
    to:
      kind: ImageStreamTag
      name: kafka-webhook:latest
  triggers:
    - type: ConfigChange
    - type: ImageChange

---

# ImageStream
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: kafka-webhook
  namespace: redops
