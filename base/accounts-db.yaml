apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "7"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"accounts-db"},"name":"accounts-db","namespace":"redops"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"accounts-db"}},"template":{"metadata":{"labels":{"app":"accounts-db"}},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_DATABASE","value":"accounts"},{"name":"POSTGRESQL_USER","value":"accounts-admin"},{"name":"POSTGRESQL_PASSWORD","value":"accounts-pwd"},{"name":"ALLOW_EMPTY_PASSWORD","value":"yes"},{"name":"BITNAMI_POSTGRESQL_DATA_DIR","value":"/var/lib/postgresql/data"}],"image":"bitnami/postgresql:16","name":"postgres","ports":[{"containerPort":5432}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"db-storage"}]},{"env":[{"name":"DATA_SOURCE_NAME","value":"postgresql://accounts-admin:accounts-pwd@localhost:5432/accounts?sslmode=disable"}],"image":"quay.io/prometheuscommunity/postgres-exporter:v0.15.0","name":"postgres-exporter","ports":[{"containerPort":9187,"name":"metrics"}]}],"volumes":[{"name":"db-storage","persistentVolumeClaim":{"claimName":"accounts-db-pvc"}}]}}}}
  creationTimestamp: "2025-07-04T22:24:54Z"
  generation: 11
  labels:
    app: accounts-db
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"postgres-exporter"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"DATA_SOURCE_NAME"}:
                    .: {}
                    f:name: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":9187,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
    manager: kubectl-patch
    operation: Update
    time: "2025-07-11T00:39:59Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"postgres"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"ALLOW_EMPTY_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"BITNAMI_POSTGRESQL_DATA_DIR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POSTGRESQL_DATABASE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POSTGRESQL_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POSTGRESQL_USER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":5432,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/lib/postgresql/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
              k:{"name":"postgres-exporter"}:
                f:env:
                  k:{"name":"DATA_SOURCE_NAME"}:
                    f:value: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"db-storage"}:
                .: {}
                f:name: {}
                f:persistentVolumeClaim:
                  .: {}
                  f:claimName: {}
    manager: kubectl-client-side-apply
    operation: Update
    time: "2025-07-11T01:00:19Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2025-07-11T01:00:29Z"
  name: accounts-db
  namespace: redops
  resourceVersion: "51801983"
  uid: 6465dce5-e243-4ff0-8717-0e7b023bac3a
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: accounts-db
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: accounts-db
    spec:
      containers:
      - env:
        - name: POSTGRESQL_DATABASE
          value: accounts
        - name: POSTGRESQL_USER
          value: accounts-admin
        - name: POSTGRESQL_PASSWORD
          value: accounts-pwd
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: BITNAMI_POSTGRESQL_DATA_DIR
          value: /var/lib/postgresql/data
        image: bitnami/postgresql:16
        imagePullPolicy: IfNotPresent
        name: postgres
        ports:
        - containerPort: 5432
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: db-storage
      - env:
        - name: DATA_SOURCE_NAME
          value: postgresql://accounts-admin:accounts-pwd@localhost:5432/accounts?sslmode=disable
        image: quay.io/prometheuscommunity/postgres-exporter:v0.15.0
        imagePullPolicy: IfNotPresent
        name: postgres-exporter
        ports:
        - containerPort: 9187
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: db-storage
        persistentVolumeClaim:
          claimName: accounts-db-pvc
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2025-07-09T10:59:59Z"
    lastUpdateTime: "2025-07-09T10:59:59Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-07-04T22:45:00Z"
    lastUpdateTime: "2025-07-11T01:00:29Z"
    message: ReplicaSet "accounts-db-65f85fb9c5" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 11
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
