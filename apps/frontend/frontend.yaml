apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: redops
  labels:
    app: frontend
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: image-registry.openshift-image-registry.svc:5000/redops/frontend:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: LEDGERWRITER_URL
              value: http://ledgerwriter:5678
            - name: PORT
              value: "8080"
            - name: PUB_KEY_PATH
              value: /keys/public.pem
            - name: ENABLE_TRACING
              value: "false"
            - name: USERSERVICE_URL
              value: http://userservice.redops.svc.cluster.local:8080
            - name: USERSERVICE_ADDR
              value: userservice.redops.svc.cluster.local:8080
            - name: USER_SERVICE_ADDR
              value: userservice.redops.svc.cluster.local:8080
            - name: USERSERVICE_API_ADDR
              value: userservice:8080
            - name: ACCOUNTS_API_ADDR
              value: http://accounts-bundle:8080
            - name: ACCOUNTS_API_URL
              value: http://accounts-api:8080
            - name: JWT_SECRET
              value: your-secret-value
            - name: PUBLIC_KEY_PATH
              value: /keys/public.pem
            - name: TRANSACTIONS_API_ADDR
              value: transactions-api
            - name: BALANCES_API_ADDR
              value: accounts-api:8080
            - name: HISTORY_API_ADDR
              value: http://accounts-api:8080
            - name: CONTACTS_API_ADDR
              value: http://accounts-api:8080
            - name: TOKEN_NAME
              value: token
            - name: GUNICORN_CMD_ARGS
              value: --access-logfile -
            - name: ENV_PLATFORM
              value: onprem
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - name: signup-js-override
              mountPath: /app/static/scripts/signup.js
              subPath: signup.override.js
            - name: login-js-volume
              mountPath: /app/static/scripts/login.js
              subPath: login.js
            - name: certs
              mountPath: /certs
            - name: nginx-tmp
              mountPath: /var/lib/nginx
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: jwt-key
              mountPath: /keys
              readOnly: true
      volumes:
        - name: signup-js-override
          configMap:
            name: signup-js-override
            defaultMode: 420
        - name: login-js-volume
          configMap:
            name: login-js-override
            defaultMode: 420
            items:
              - key: login.override.js
                path: login.js
        - name: certs
          emptyDir: {}
        - name: nginx-tmp
          emptyDir: {}
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: jwt-key
          configMap:
            name: jwt-public-key
            defaultMode: 420
      imagePullSecrets:
        - name: ghcr-secret
        - name: default-dockercfg-6c8rb
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: 30
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001060000
